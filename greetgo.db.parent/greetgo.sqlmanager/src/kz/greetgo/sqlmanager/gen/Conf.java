package kz.greetgo.sqlmanager.gen;

/**
 * Конфигурация генератора
 *
 * @author pompei
 */
public class Conf {
  /**
   * Символы-сепараторы SQL-команд
   * <p/>
   * <p>
   * <i>При генераии SQL-файла, содержащего несколько SQL-команд, используется эта строка для
   * разделения SQL-команд между собой</i>
   * </p>
   */
  public String separator = ";;";
  /**
   * Префикс ключевой таблицы
   */
  public String kPrefix = "m_";
  /**
   * Префикс таблицы памяти
   */
  public String mPrefix = "m_";
  /**
   * Префикс секвенса (sequence)
   */
  public String seqPrefix = "s_";
  /**
   * Префикс вьюшки
   */
  public String vPrefix = "v_";
  /**
   * Префикс оперативной таблицы
   */
  public String oPref = "o_";

  /**
   * Префикс with-вьюшки
   * <p>
   * <i>With-вьюшка - это предварительно сформированный селект в with-выражении SQL</i>
   * </p>
   */
  public String withPrefix = "x_";
  /**
   * Имя поля для хранения момента вставки записи.
   * <p>
   * <i>С точки зрения бизнес-логики - это момент последнего изменения значения поля</i>
   * </p>
   */
  public String ts = "ts";
  /**
   * <i>(Не используется)</i>
   */
  public String tsTab = "ts";
  /**
   * Имя поля для хранения момента создания записи
   */
  public String cre = "createdAt";
  /**
   * Строка-кавычка для формирования реализации хранимой процедуры/функции.
   * <p/>
   * <p>
   * <i>Пока используется только для PostgreSQL</i>
   * </p>
   */
  public String bigQuote = "big_quote";
  /**
   * <i>(Не используется)</i>
   */
  public String _ins_ = "ins_";
  /**
   * Префикс для названия хранимой процедуры
   */
  public String _p_ = "p_";
  /**
   * <i>(Не используется)</i>
   */
  public String _value_ = "__value__";
  /**
   * Префикс интерфейсов, генерируемых для библиотеки-gbatis, через которые будет формироваться
   * базовое взаимодействие с БД
   * <p/>
   * <p>
   * <i>Основное предназначение этих классов - заполнение БД данными</i>
   * </p>
   */
  public String daoSuffix = "Dao";
  /**
   * Ограничитель, на максимальную длину имен таблиц, вьюшек и хранимых процедур/функций.
   * <p/>
   * <p>
   * <i> Необходим для оракла, где это ограничение присутствует </i>
   * </p>
   */
  public Integer maxIdLength = 30;

  /**
   * Директория, куда генерируются исходники java-классов
   * <p>
   * <i>структура поддиректорий пакетов, будет генерироваться в этой папке автоматически</i>
   * </p>
   */
  public String javaGenDir;
  /**
   * Префикс пакетов классов модели
   */
  public String modelPackage;
  /**
   * Директория, куда генерируются исходники java-классов
   * <p>
   * <i>Структура поддиректорий пакетов, будет генерироваться в этой папке автоматически</i>
   * </p>
   * <p>
   * <i>Отличается от {@link #javaGenDir} тем, что сюда будут генерироваться только структурые
   * классы модели (которые содержат поля данных). Можно приравнять к {@link #javaGenDir}</i>
   * </p>
   */
  public String javaGenStruDir;
  /**
   * Префикс пакетов классов модели
   * <p>
   * <i>Отличается от {@link #modelPackage} тем, что этим префиксом будут предварятся только
   * структурые классы модели (которые содержат поля данных). Можно приравнять к
   * {@link #modelPackage}</i>
   * </p>
   */
  public String modelStruPackage;
  /**
   * Префикс пакетов Dao-классов
   */
  public String daoPackage;
  /**
   * Базовый класс классов модели.
   * <p>
   * Может быть <code>null</code>
   * </p>
   */
  public String modelStruExtends;
  /**
   * Интерфейс, которые реализуют все классы модели
   * <p>
   * Может быть <code>null</code>
   * </p>
   */
  public String modelStruImplements;

  /**
   * Подключает генерацию оперативных таблиц и работу с ними (префикс <code>o_</code>). При этом,
   * вьюшки с префиксом <code>v_</code> бедут переадресованы на эти таблицы. Также изменена работа
   * со вставкой данных.
   */
  public boolean genOperTables = false;

  /**
   * Время вставки записи в таблицу: поле в таблице с префиксом <code>o_</code>
   */
  public String insertedAt = "inserted_at";

  /**
   * Время последнего изменения поля: поле в таблице с префиксом <code>o_</code>
   */
  public String lastModifiedAt = "last_modified_at";

  /**
   * В оракловой генерации хранимых процедур производит проверку на ошибку вставке, и если ошибка
   * произошла, то производит попытку вставки ещё раз через малый промежуток времени
   */
  public boolean oracleInsertDupValues = false;

  /**
   * Использование хинта INDEX для селекта по первичному ключу
   */
  public boolean useIndexHintForOracle = false;

  /**
   * Тип поля, в котором хранится идентификатор того, кто делает изменения в БД. Если null, то поле
   * для того, кто меняет данные в БД, не создаётся
   */
  public UserIdFieldType userIdFieldType = null;

  /**
   * Длинна поля, в котором храниться идентификатор того, кто делает изменения в БД
   */
  public int userIdLength = 30;

  /**
   * Имя хранимой функции, которая возвращает того, кто меняет значения в БД
   */
  public String get_changer = "get_changer";

  /**
   * Имя хранимой процедуры, которая запоминает того, кто собирается менять данные в БД
   */
  public String set_changer = "set_changer";

  /**
   * Поле центральной таблицы m_ - хранит ИД того, кто создаёт сущность
   */
  public String createdBy = "createdBy";

  /**
   * Поле таблицы m_ с атрибутом - хранит ИД того, кто меняет значение поля
   */
  public String modi = "modi";

  /**
   * Поле таблицы o_ - хранит ИД того, что формирует новое значение поля
   */
  public String insertedBy = "inserted_by";

  /**
   * Поле таблицы o_ - хранит ИД того, что изменяет значение поля
   */
  public String lastModifiedBy = "last_modified_by";

  /**
   * Указывает на использование НФ6 (т.е. на хранения истории)
   */
  public boolean useNf6 = true;
}
